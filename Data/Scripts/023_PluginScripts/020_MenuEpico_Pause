=begin
class PokemonPauseMenu_Scene
  def pbStartScene
    @MenuScene=1; @frame=0; @frame2=0
    pbSetViableDexes
    @viewport=Viewport.new(0,0,Graphics.width,Graphics.height)
    @viewport.z=99999
    @partyHP = Array.new(6, 0)
    @partyTotalHP = Array.new(6, 0)
    @sprites={}
    @sprites["bg"]=Sprite.new
    @sprites["bg"].z = 350
    @sprites["bg"].bitmap= BitmapCache.load_bitmap("Graphics/Pictures/Menu/background")

    @sprites["pokedex"]=IconSprite.new(0,0,@viewport)
    @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex")
    @sprites["pokedex"].x = 452
    @sprites["pokedex"].y = 12

    @sprites["equipo"]=IconSprite.new(0,0,@viewport)
    @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPoke")
    @sprites["equipo"].x = 452
    @sprites["equipo"].y = 84

    @sprites["bolsa"]=IconSprite.new(0,0,@viewport)
    @sprites["bolsa"].setBitmap("Graphics/Pictures/Menu/MenuBolsa")
    @sprites["bolsa"].x = 452
    @sprites["bolsa"].y = 158

    @sprites["guardar"]=IconSprite.new(0,0,@viewport)
    @sprites["guardar"].setBitmap("Graphics/Pictures/Menu/MenuGuardar")
    @sprites["guardar"].x = 452
    @sprites["guardar"].y = 232

    @sprites["opciones"]=IconSprite.new(0,0,@viewport)
    @sprites["opciones"].setBitmap("Graphics/Pictures/Menu/MenuAjustes")
    @sprites["opciones"].x = 452
    @sprites["opciones"].y = 306

    @sprites["overlay"]=BitmapSprite.new(Graphics.width, Graphics.height, @viewport)



    #hud

          if $Trainer.party.length>0
            for i in 0...$Trainer.party.length
              if i < 3
                @sprites["pokemon#{i}"]=PokemonIconSprite.new($Trainer.party[i],@viewport)
                @sprites["pokemon#{i}"].x = 56+64*(i)
                @sprites["pokemon#{i}"].y = 250
              else
                @sprites["pokemon#{i}"]=PokemonIconSprite.new($Trainer.party[i],@viewport)
                @sprites["pokemon#{i}"].x = 56+64*(i-3)
                @sprites["pokemon#{i}"].y = 320
              end
            end
          end
        borderWidth = 36
        borderHeight = 10
        fillWidth = 32
        fillHeight = 6
        for i in 0...6
          if i < 3
            x=88+64*(i)
            y=260
          else
            x=88+64*(i-3)
            y=332
          end

          @sprites["hpbarborder#{i}"] = BitmapSprite.new(
            borderWidth,borderHeight,@viewport
          )
          @sprites["hpbarborder#{i}"].x = x-borderWidth/2
          @sprites["hpbarborder#{i}"].y = y-borderHeight/2
          @sprites["hpbarborder#{i}"].bitmap.fill_rect(
            Rect.new(0,0,borderWidth,borderHeight),
            Color.new(32,32,32)
          )
          @sprites["hpbarborder#{i}"].bitmap.fill_rect(
            (borderWidth-fillWidth)/2,
            (borderHeight-fillHeight)/2,
            fillWidth,
            fillHeight,
            Color.new(96,96,96)
          )
          @sprites["hpbarborder#{i}"].visible = false

          @sprites["hpbarfill#{i}"] = BitmapSprite.new(
            fillWidth,fillHeight,@viewport
          )
          @sprites["hpbarfill#{i}"].x = x-fillWidth/2
          @sprites["hpbarfill#{i}"].y = y-fillHeight/2
        end
        refreshHPBars

      for sprite in @sprites.values
        sprite.z+=600
      end
    if  $Trainer.party.length>0 && $Trainer.pokedex
      @select=1
      @selectini=1
    elsif $Trainer.party.length>0 && !$Trainer.pokedex
      @select=2
      @selectini=2
    else
      @select=3
      @selectini=3
    end
    endscene=true
    pbMenuLoop
  end
  def refreshHPBars
      for i in 0...6
        hp = 0
        totalhp = 0
        hasHP = i<$Trainer.party.size && !$Trainer.party[i].egg?
        if hasHP
          hp = $Trainer.party[i].hp
          totalhp = $Trainer.party[i].totalhp
        end

        lastTimeWasHP = @partyTotalHP[i] != 0
        @sprites["hpbarborder#{i}"].visible = hasHP if lastTimeWasHP != hasHP

        redrawFill = hp != @partyHP[i] || totalhp != @partyTotalHP[i]
        if redrawFill
          @partyHP[i] = hp
          @partyTotalHP[i] = totalhp
          @sprites["hpbarfill#{i}"].bitmap.clear

          width = @sprites["hpbarfill#{i}"].bitmap.width
        height = @sprites["hpbarfill#{i}"].bitmap.height
          fillAmount = (hp==0 || totalhp==0) ? 0 : hp*width/totalhp
          # Always show a bit of HP when alive
          fillAmount = 1 if fillAmount==0 && hp>0
          if fillAmount > 0
            hpColors=nil
            if hp<=(totalhp/4).floor
              hpColors = [Color.new(240,80,32),Color.new(168,48,56)] # Red
            elsif hp<=(totalhp/2).floor
              hpColors = [Color.new(248,184,0),Color.new(184,112,0)] # Orange
            else
              hpColors = [Color.new(24,192,32),Color.new(0,144,0)] # Green
            end
            shadowHeight = 2
            rect = Rect.new(0,0,fillAmount,shadowHeight)
            @sprites["hpbarfill#{i}"].bitmap.fill_rect(rect, hpColors[1])
            rect = Rect.new(0,shadowHeight,fillAmount,height-shadowHeight)
            @sprites["hpbarfill#{i}"].bitmap.fill_rect(rect, hpColors[0])
          end
        end
      end
    end

  def pbMenuText
    if @MenuScene==1
      overlay=@sprites["overlay"].bitmap
      overlay.clear
      baseColor=Color.new(245, 245, 245)
      shadowColor=Color.new(99,99,99)
      shadowColor2=Color.new(156,156,156)
      pbSetSystemFont(@sprites["overlay"].bitmap)
      textos=[]
      textos.push([_INTL("${1}",$Trainer.money),4,4,0,baseColor,shadowColor])
       pbDrawTextPositions(overlay,textos)
       #medallas

    x=26
    region=pbGetCurrentRegion(0) # Get the current region
    imagePositions=[]
    for i in 0...8
      #i*32
      if $Trainer.badges[i+region*8]
        imagePositions.push(["Graphics/Pictures/badges",x,134,i*32,region*32,32,32])
      end
      x+=32
    end
    pbDrawImagePositions(overlay,imagePositions)
     end
   end

  def pbShowMenu
    @viewport.visible= true
  end

  def pbHideMenu
    @viewport.visible=false
  end


   def pbStartAnimation
    pbSEPlay("menu")
     self.pbMenuLoop
   end

  def pbMenuLoop
    while @MenuScene==1
      self.update
      self.pbMenuText
      self.pbMenuInput
      if $MenuClose==true
        pbDisposeSpriteHash(@sprites)
        @viewport.dispose
        $MenuClose=false
        @MenuScene=2
      end
    end
  end

   def pbEndScene
    @MenuScene=0
    pbSEPlay("menu")
    pbDisposeSpriteHash(@sprites)
    @viewport.dispose
  end

  def update
    Graphics.update
    Input.update


    if $Trainer.pokedex
      @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex")
    else
      @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDexOff")
    end

    if $Trainer.pokedex
      @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex")
    else
      @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDexOff")
    end

    if $Trainer.party.length>0
      @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPoke")
    else
      @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPokeOff")
    end

      if @select == 1
        @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDexOn") if $Trainer.pokedex
        @sprites["pokedex"].x = 312 if $Trainer.pokedex
        @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPoke") if $Trainer.party.length>0
        @sprites["equipo"].x = 452
        @sprites["bolsa"].setBitmap("Graphics/Pictures/Menu/MenuBolsa")
        @sprites["bolsa"].x = 452
        @sprites["guardar"].setBitmap("Graphics/Pictures/Menu/MenuGuardar")
        @sprites["guardar"].x = 452
        @sprites["opciones"].setBitmap("Graphics/Pictures/Menu/MenuAjustes")
        @sprites["opciones"].x = 452
      elsif @select == 2
        @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex") if $Trainer.pokedex
        @sprites["pokedex"].x = 452
        @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPokeOn") if $Trainer.party.length>0
        @sprites["equipo"].x = 312 if $Trainer.party.length>0
        @sprites["bolsa"].setBitmap("Graphics/Pictures/Menu/MenuBolsa")
        @sprites["bolsa"].x = 452
        @sprites["guardar"].setBitmap("Graphics/Pictures/Menu/MenuGuardar")
        @sprites["guardar"].x = 452
        @sprites["opciones"].setBitmap("Graphics/Pictures/Menu/MenuAjustes")
        @sprites["opciones"].x = 452
      elsif @select == 3
        @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex") if $Trainer.pokedex
        @sprites["pokedex"].x = 452
        @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPoke") if $Trainer.party.length>0
        @sprites["equipo"].x = 452
        @sprites["bolsa"].setBitmap("Graphics/Pictures/Menu/MenuBolsaOn")
        @sprites["bolsa"].x = 312
        @sprites["guardar"].setBitmap("Graphics/Pictures/Menu/MenuGuardar")
        @sprites["guardar"].x = 452
        @sprites["opciones"].setBitmap("Graphics/Pictures/Menu/MenuAjustes")
        @sprites["opciones"].x = 452
      elsif @select == 4
        @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex") if $Trainer.pokedex
        @sprites["pokedex"].x = 452
        @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPoke") if $Trainer.party.length>0
        @sprites["equipo"].x = 452
        @sprites["bolsa"].setBitmap("Graphics/Pictures/Menu/MenuBolsa")
        @sprites["bolsa"].x = 452
        @sprites["guardar"].setBitmap("Graphics/Pictures/Menu/MenuGuardarOn")
        @sprites["guardar"].x = 312
        @sprites["opciones"].setBitmap("Graphics/Pictures/Menu/MenuAjustes")
        @sprites["opciones"].x = 452
      elsif @select == 5
        @sprites["pokedex"].setBitmap("Graphics/Pictures/Menu/MenuDex") if $Trainer.pokedex
        @sprites["pokedex"].x = 452
        @sprites["equipo"].setBitmap("Graphics/Pictures/Menu/MenuPoke") if $Trainer.party.length>0
        @sprites["equipo"].x = 452
        @sprites["bolsa"].setBitmap("Graphics/Pictures/Menu/MenuBolsa")
        @sprites["bolsa"].x = 452
        @sprites["guardar"].setBitmap("Graphics/Pictures/Menu/MenuGuardar")
        @sprites["guardar"].x = 452
        @sprites["opciones"].setBitmap("Graphics/Pictures/Menu/MenuAjustesOn")
        @sprites["opciones"].x = 312
      end
  end

  def pbMenuInput
      if Input.trigger?(Input::DOWN) &&@select<5
        @select+=1; pbSEPlay("Select")
      end
      if Input.trigger?(Input::UP) && @select>@selectini
        @select-=1; pbSEPlay("Select")
      end

       if Input.trigger?(Input::B)
        pbEndScene
      end

       if Input.trigger?(Input::C)
        case @select
        when 1 # Dex
          self.pokeDex
        when 2 #Pkes
          if $Trainer.party.length > 0
            self.pokemonParty
          end
        when 3 #Mochila
          self.bag
        when 4 #Guardar
            self.save
        when 5 #Opciones
          self.options
        end
      end
    end

 def pokeDex
   pbSEPlay("Choose")
  if DEXDEPENDSONLOCATION
          pbFadeOutIn(99999) {
             scene=PokemonPokedexScene.new
             screen=PokemonPokedex.new(scene)
             screen.pbStartScreen
             @scene.pbRefresh
          }
    else
      if $PokemonGlobal.pokedexViable.length==1
            $PokemonGlobal.pokedexDex=$PokemonGlobal.pokedexViable[0]
            $PokemonGlobal.pokedexDex=-1 if $PokemonGlobal.pokedexDex==$PokemonGlobal.pokedexUnlocked.length-1
            pbFadeOutIn(99999) {
            scene=PokemonPokedexScene.new
            screen=PokemonPokedex.new(scene)
            screen.pbStartScreen
        }
      else
        pbLoadRpgxpScene(Scene_PokedexMenu.new)
      end
    end
  end

  def pokemonParty
    pbSEPlay("Choose")
    sscene=PokemonScreen_Scene.new
    sscreen=PokemonScreen.new(sscene,$Trainer.party)
    hiddenmove=nil
    pbFadeOutIn(99999) {
    hiddenmove=sscreen.pbPokemonScreen
    if hiddenmove
      pbEndScene
    end
    }
    if hiddenmove
      Kernel.pbUseHiddenMove(hiddenmove[0],hiddenmove[1])
      return
    end
  end


   def bag
    pbSEPlay("Choose")
    item=0
    scene=PokemonBag_Scene.new
    screen=PokemonBagScreen.new(scene,$PokemonBag)
    pbFadeOutIn(99999) {
      item=screen.pbStartScreen
      if item>0
        pbEndScene
      else
        pbRefresh
      end
    }
    if item>0
      Kernel.pbUseKeyItemInField(item)
      return
    end
  end

  def save
    pbSEPlay("Choose")
    pbHideMenu
    scene=PokemonSaveScene.new
    screen=PokemonSave.new(scene)
    if screen.pbSaveScreen
      pbShowMenu
    else
      pbShowMenu
    end
  end

  def options
    pbSEPlay("Choose")
    scene=PokemonOptionScene.new
      screen=PokemonOption.new(scene)
      pbFadeOutIn(99999) {
      screen.pbStartScreen
      pbUpdateSceneMap
      }
   end
 end

class PokemonPauseMenu
   def initialize(scene)
     @scene = scene
   end

   def pbShowMenu
     @scene.pbRefresh
     @scene.pbShowMenu
   end

   def pbStartPokemonMenu
     if !$Trainer
       if $DEBUG
         pbMessage(_INTL("The player trainer was not defined, so the pause menu can't be displayed."))
         pbMessage(_INTL("Please see the documentation to learn how to set up the trainer player."))
       end
       return
     end
     pbSetViableDexes
     @scene.pbStartScene
     endscene = true
     commands = []
     cmdPokedex  = -1
     cmdPokemon  = -1
     cmdBag      = -1
     cmdTrainer  = -1
     cmdSave     = -1
     cmdOption   = -1
     cmdPokegear = -1
     cmdDebug    = -1
     cmdQuit     = -1
     cmdEndGame  = -1
     commands[cmdPokedex = commands.length]  = _INTL("Journal") if $Trainer.pokedex && $PokemonGlobal.pokedexViable.length>0
     commands[cmdPokemon = commands.length]  = _INTL("Pokémon") if $Trainer.party.length>0
     commands[cmdBag = commands.length]      = _INTL("Bag") if !pbInBugContest?
     commands[cmdPokegear = commands.length] = _INTL("Pokégear") if $Trainer.pokegear
     commands[cmdTrainer = commands.length]  = $Trainer.name
     if pbInSafari?
       if SAFARI_STEPS<=0
         @scene.pbShowInfo(_INTL("Balls: {1}",pbSafariState.ballcount))
       else
         @scene.pbShowInfo(_INTL("Steps: {1}/{2}\nBalls: {3}",
            pbSafariState.steps,SAFARI_STEPS,pbSafariState.ballcount))
       end
       commands[cmdQuit = commands.length]   = _INTL("Quit")
     elsif pbInBugContest?
       if pbBugContestState.lastPokemon
         @scene.pbShowInfo(_INTL("Caught: {1}\nLevel: {2}\nBalls: {3}",
            PBSpecies.getName(pbBugContestState.lastPokemon.species),
            pbBugContestState.lastPokemon.level,
            pbBugContestState.ballcount))
       else
         @scene.pbShowInfo(_INTL("Caught: None\nBalls: {1}",pbBugContestState.ballcount))
       end
       commands[cmdQuit = commands.length]   = _INTL("Quit Contest")
     else
       commands[cmdSave = commands.length]   = _INTL("Save") if $game_system && !$game_system.save_disabled
     end
     commands[cmdOption = commands.length]   = _INTL("Options")
     commands[cmdDebug = commands.length]    = _INTL("Debug") if $DEBUG
     commands[cmdEndGame = commands.length]  = _INTL("Quit Game")
     loop do
       command = @scene.pbShowCommands(commands)
       if cmdPokedex>=0 && command==cmdPokedex
         pbPlayDecisionSE
         if USE_CURRENT_REGION_DEX
           pbFadeOutIn {
             scene = PokemonPokedex_Scene.new
             screen = PokemonPokedexScreen.new(scene)
             screen.pbStartScreen
             @scene.pbRefresh
           }
         else
           if $PokemonGlobal.pokedexViable.length==1
             $PokemonGlobal.pokedexDex = $PokemonGlobal.pokedexViable[0]
             $PokemonGlobal.pokedexDex = -1 if $PokemonGlobal.pokedexDex==$PokemonGlobal.pokedexUnlocked.length-1
             pbFadeOutIn {
               scene = PokemonPokedex_Scene.new
               screen = PokemonPokedexScreen.new(scene)
               screen.pbStartScreen
               @scene.pbRefresh
             }
           else
             pbFadeOutIn {
               scene = PokemonPokedexMenu_Scene.new
               screen = PokemonPokedexMenuScreen.new(scene)
               screen.pbStartScreen
               @scene.pbRefresh
             }
           end
         end
       elsif cmdPokemon>=0 && command==cmdPokemon
         pbPlayDecisionSE
         hiddenmove = nil
         pbFadeOutIn {
           sscene = PokemonParty_Scene.new
           sscreen = PokemonPartyScreen.new(sscene,$Trainer.party)
           hiddenmove = sscreen.pbPokemonScreen
           (hiddenmove) ? @scene.pbEndScene : @scene.pbRefresh
         }
         if hiddenmove
           $game_temp.in_menu = false
           pbUseHiddenMove(hiddenmove[0],hiddenmove[1])
           return
         end
       elsif cmdBag>=0 && command==cmdBag
         pbPlayDecisionSE
         item = 0
         pbFadeOutIn {
           scene = PokemonBag_Scene.new
           screen = PokemonBagScreen.new(scene,$PokemonBag)
           item = screen.pbStartScreen
           (item>0) ? @scene.pbEndScene : @scene.pbRefresh
         }
         if item>0
           $game_temp.in_menu = false
           pbUseKeyItemInField(item)
           return
         end
       elsif cmdPokegear>=0 && command==cmdPokegear
         pbPlayDecisionSE
         pbFadeOutIn {
           scene = PokemonPokegear_Scene.new
           screen = PokemonPokegearScreen.new(scene)
           screen.pbStartScreen
           @scene.pbRefresh
         }
       elsif cmdTrainer>=0 && command==cmdTrainer
         pbPlayDecisionSE
         pbFadeOutIn {
           scene = PokemonTrainerCard_Scene.new
           screen = PokemonTrainerCardScreen.new(scene)
           screen.pbStartScreen
           @scene.pbRefresh
         }
       elsif cmdQuit>=0 && command==cmdQuit
         pbPlayDecisionSE
         @scene.pbHideMenu
         if pbInSafari?
           if pbConfirmMessage(_INTL("Would you like to leave the Safari Game right now?"))
             @scene.pbEndScene
             pbSafariState.decision = 1
             pbSafariState.pbGoToStart
             return
           else
             pbShowMenu
           end
         else
           if pbConfirmMessage(_INTL("Would you like to end the Contest now?"))
             @scene.pbEndScene
             pbBugContestState.pbStartJudging
             return
           else
             pbShowMenu
           end
         end
       elsif cmdSave>=0 && command==cmdSave
         @scene.pbHideMenu
         scene = PokemonSave_Scene.new
         screen = PokemonSaveScreen.new(scene)
         if screen.pbSaveScreen
           @scene.pbEndScene
           endscene = false
           break
         else
           pbShowMenu
         end
       elsif cmdOption>=0 && command==cmdOption
         pbPlayDecisionSE
         pbFadeOutIn {
           scene = PokemonOption_Scene.new
           screen = PokemonOptionScreen.new(scene)
           screen.pbStartScreen
           pbUpdateSceneMap
           @scene.pbRefresh
         }
       elsif cmdDebug>=0 && command==cmdDebug
         pbPlayDecisionSE
         pbFadeOutIn {
           pbDebugMenu
           @scene.pbRefresh
         }
       elsif cmdEndGame>=0 && command==cmdEndGame
         pbPlayDecisionSE
         @scene.pbHideMenu
         if pbConfirmMessage(_INTL("Are you sure you want to quit the game?"))
           scene = PokemonSave_Scene.new
           screen = PokemonSaveScreen.new(scene)
           if screen.pbSaveScreen
             @scene.pbEndScene
           end
           @scene.pbEndScene
           $scene = nil
           return
         else
           pbShowMenu
         end
       else
         break
       end
     end
     @scene.pbEndScene if endscene
   end
 end
=end
